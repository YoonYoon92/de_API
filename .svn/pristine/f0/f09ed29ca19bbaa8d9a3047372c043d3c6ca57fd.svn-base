package com.saydept.api.comm;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.saydept.api.comm.model.CommModel;
import com.saydept.api.comm.model.ProgModel;
import com.saydept.api.comm.model.StoreModel;
import com.saydept.api.comm.model.UserModel;

@CrossOrigin(origins = "*")
@RestController
public class CommController {

	@Autowired
	private CommService commService;
	
	/**
	 * API 상태체크
	 * @return
	 * @throws ParseException 
	 */
	@RequestMapping(value = "api/comm", method = RequestMethod.GET)
	public String condition() throws ParseException {
		
		return this.getClass().getName() + " : " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
	}

	/**
	 * 공통코드 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectCommCodeList", method = RequestMethod.POST)
	public List<CommModel> selectCommCodeList(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectCommCodeList(request);
		return result;
	}

	/**
	 * 매장목록 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectCommStoreList", method = RequestMethod.POST)
	public List<CommModel> selectCommStoreList(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectCommStoreList(request);
		return result;
	}
	
	/**
	 * 매장목록 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectCommPosList", method = RequestMethod.POST)
	public List<CommModel> selectCommPosList(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectCommPosList(request);
		return result;
	}
	
	/**
	 * 프로그램 목록
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectCommProgList", method = RequestMethod.POST)
	public List<ProgModel> selectCommProgList(@RequestBody UserModel request)throws Exception {
		
		ProgModel rootMenu = new ProgModel();
		rootMenu.setId("00");
		commService.selectProgList(rootMenu);
		
		return rootMenu.getChildren();
	}
	
	/**
	 * vpsTest
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "vpsTest")
	public List<ProgModel> vpsTest()throws Exception {
		
		ProgModel rootMenu = new ProgModel();
		rootMenu.setId("00");
		commService.selectProgList(rootMenu);
		
		return rootMenu.getChildren();
	}
	
	/**
	 * 조직목록 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectStoreList", method = RequestMethod.POST)
	public List<StoreModel> selectStoreList()throws Exception {
		
		StoreModel rootStore = new StoreModel();
		commService.selectStoreList(rootStore);
		
		return rootStore.getChildren();
	}
	
	/**
	 * 조직(점) 콤보박스 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectStoreComboLv1List", method = RequestMethod.POST)
	public List<CommModel> selectStoreComboLv1List(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectStoreComboLv1List(request);
		return result;
	}
	
	/**
	 * 조직(부) 콤보박스 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectStoreComboLv2List", method = RequestMethod.POST)
	public List<CommModel> selectStoreComboLv2List(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectStoreComboLv2List(request);
		return result;
	}
	
	/**
	 * 조직(팀) 콤보박스 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectStoreComboLv3List", method = RequestMethod.POST)
	public List<CommModel> selectStoreComboLv3List(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectStoreComboLv3List(request);
		return result;
	}
	
	/**
	 * 조직(PC) 콤보박스 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectStoreComboLv4List", method = RequestMethod.POST)
	public List<CommModel> selectStoreComboLv4List(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectStoreComboLv4List(request);
		return result;
	}
	
	/**
	 * 조직(코너) 콤보박스 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectStoreComboLv5List", method = RequestMethod.POST)
	public List<CommModel> selectStoreComboLv5List(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectStoreComboLv5List(request);
		return result;
	}
	
	/**
	 * 조직(class) 콤보박스 조회
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "api/comm/selectStoreComboLv6List", method = RequestMethod.POST)
	public List<CommModel> selectStoreComboLv6List(@RequestBody CommModel request)throws Exception {

		List<CommModel> result = commService.selectStoreComboLv6List(request);
		return result;
	}
}